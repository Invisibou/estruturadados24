COMANDOS GIT

- Clonar repositório na máquina local:
git clone https://github.com/pedroalbe31/ESTRUTURA-DE-DADOS-24.git

- Ver status de repositório local
git status

- Adicionar arquivos não rastreados a serem confirmados
git add .

- Criar ponto de marcação no projeto/branch
git commit -m "Meu primeiro commit"

- Verificar repositórios remotos configurados no repo local
git remote -v

- Enviar commits pendentes para o repo remoto
git push origin main


-----
COMANDOS DOT .NET

- Listar versões instaladas
dotnet --list-sdks

- Criar novo projeto console
dotnet new console -n "nome do projeto (Aula01)"

- Executar programa 
dotnet run

- Executar programa c/ detalhes
dotnet watch run

//-----------------//------------------//--------------//---------------//-------------
TAD = Tipo Abstrato de Dados (Objeto, classe...)
Tipo primitivo: Inteiro, Boleano, Char, float, String...

PascalCase //Padrão para Atributo, Nome de classe sempre em PascalCase, sem caracteres especiais e em inglês;
camelCase //Padrão para Parametro;
_snake_case //Padrão que você não pegou, , _snake_case para atributos Privados de classe;

As chaves "{}" servem para limitar o Escopo;
Os parênteses "()" representam Métodos;
Método:
_Procedimento
_Função

ctrl + shift + " abre o terminal no C#

git status

git add .

git commit =m "Digite sua mensagem"

git push origin main

Tudo certo :)



//--------------//--------------//---------------//-------------//---------------//-------
*PILHA*
	Fila = Fifo;
	Pilha = Lifo;
	PoP = Retorna o que tem no topo da pilha e tira da estrutura;
	Push = Coloca, literalmente empurra;
	Peek = Retorna e retira da estrutura;
	
//--------------//---------------//--------------//-------------------//------------------//-------

ÁRVORES

Raíz é origem, não tem ninguém acima dela.
As ramificações podemm ser chamada de nós, galhos ou ramos;
No terceiro nível temos nós filhos, que são filhos do nível anterior, também podendo ter filhos, netos, bisnetos, como uma árvore genealógica.
Folha é onde acaba, é o último nível, não irá brotar nada além da folha.
A classificação de como a árvore pode ser dividida, pode ser classificada como: Bi para 2 ramificações, Tri para 3, Ena para Tantos quantos forem.
Defina o nível observando quantos Pais que tem na árvore, então se um filho tiver um pai, esse pai tiver um pai, esse pai tiver um pai e esse pai não tiver um pai, 
é de terceiro nível.

Árvores podem ser divido por tipos, tanto como primitivo como criados, inteiro, pessoas, float.

//-------------//--------------//--------------//----------------//-----------------//--------------

Pre Order = Primeiro a visitar a raiz
In Order = Visita a raiz no meio
On Order/ Post Order = visita a raiz por último
